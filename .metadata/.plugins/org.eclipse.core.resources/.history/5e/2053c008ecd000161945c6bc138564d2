package servidor;

import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.Serializable;
import java.net.Socket;

import comun.Coordenadas;
import comun.Evento;

public class Cliente {
	private Socket s;
	private boolean connected=true;
	private int x, y, Vx, Vy;
	int velocidadX=2;
	int velocidadY=2;
	OutputStream os;
	private int idJugador;
	InputStream is;
	public Cliente(Socket s) {
		try {
			os = s.getOutputStream();
			is = s.getInputStream();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		this.s = s;
		enviarMensaje(new Coordenadas(Loader.getxBola(),Loader.getyBola()));
		Thread t = new Thread(new Runnable() {

			@Override
			public void run() {
				while (connected) {
					
					
					try {
						
						ObjectInputStream ois = new ObjectInputStream(is);
						Object o = ois.readObject();
						if (o instanceof Evento) {
							Evento e = (Evento) o;
							int[] velocidad = Inteligencia.mover(e.getTipoDeEvento(), Cliente.this);
							if (velocidad[1] == 1) {// Vx
								Cliente.this.Vx=velocidad[0];
								
							} else if (velocidad[1] == 2) {// Vy
								Cliente.this.Vy=velocidad[0];
							
							}

						}
					} catch (IOException e) {
						connected=false;
						e.printStackTrace();
					} catch (ClassNotFoundException e) {
						connected=false;
						e.printStackTrace();
					}

				}

			}
		});
		t.start();
		
		
		Thread t2 = new Thread(new Runnable() {
			
			@Override
			public void run() {
				while(connected){
					
					Cliente.this.y=Cliente.this.y+Cliente.this.Vy;
					Cliente.this.x=Cliente.this.x+Cliente.this.Vx;
					Loader.setyBola(Cliente.this.y);
					Loader.setxBola(Cliente.this.x);
					
					MainServidor.enviarMensajeATodos(new Coordenadas(Cliente.this.x,Cliente.this.y));
					try {
						Thread.sleep(10);
					} catch (InterruptedException e) {
						connected=false;
						e.printStackTrace();
					}
				}
				
			}
		});
		t2.start();
	}

	public void enviarMensaje(Coordenadas c) {
		
		try {
		
			ObjectOutputStream oos = new ObjectOutputStream(os);
			oos.writeObject(c);
		} catch (IOException e) {
		
			e.printStackTrace();
		}

	}

	public int getVelocidadX() {
		return velocidadX;
	}

	public void setVelocidadX(int velocidadX) {
		this.velocidadX = velocidadX;
	}

	public int getVelocidadY() {
		return velocidadY;
	}

	public void setVelocidadY(int velocidadY) {
		this.velocidadY = velocidadY;
	}

}
